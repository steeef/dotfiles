[alias]
# log =====
    lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
    lg = !"git lg1"

    s = status -s

# Switch to a branch, creating it if necessary
    go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

# Create pull request for current branch  =====
    pr  = "!open \"$(git remote -v | grep origin | grep push | cut -f 2 | cut -d \" \" -f 1 | sed -e \"s|git@\\(.*\\):\\(.*\\).git|https://\\1/\\2|\")/pull/new/$(git rev-parse --abbrev-ref HEAD)\""

# Remove branches that have already been merged with master
# a.k.a. ‘delete merged’
    dm = "!git branch --merged | grep -Ev \"(\\*|master|develop|staging)\" | xargs -n 1 git branch -d"

  # https://csswizardry.com/2017/05/little-things-i-like-to-do-with-git/
  stats = shortlog -sn --since='10 weeks'
  recent = for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"
  overview = log --all --since='2 weeks' --oneline --no-merges
  recap = "!git log --all --oneline --no-merges --author=$(git config --get user.email)"
  today = "!git log --since=00:00:00 --all --oneline --no-merges --author=$(git config --get user.email)"

[color]
    diff = auto
    status = auto
    branch = auto
[core]
    excludesfile = ~/.gitignore
    autocrlf = input
[apply]
    whitespace = nowarn
[format]
    pretty = %C(yellow)%h%Creset %s %C(red)(%cr)%Creset
[github]
    user = steeef
[push]
    default = current
[init]
    templatedir = ~/.git_template
[credential]
    helper = osxkeychain
[commit]
    verbose = true
[diff]
	compactionHeuristic = off
	indentHeuristic = on
[user]
	name = Stephen Price
	email = stephen@stp5.net
[includeIf "gitdir:~/code/work/"]
  path = .gitconfig-work
[http "https://gopkg.in"]
	followRedirects = true
